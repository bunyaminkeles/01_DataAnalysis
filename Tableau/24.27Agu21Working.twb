<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='SelectDimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
        <calculation class='tableau' formula='&quot;Region&quot;' />
        <members>
          <member value='&quot;Segment&quot;' />
          <member value='&quot;Ship Mode&quot;' />
          <member value='&quot;Region&quot;' />
          <member value='&quot;Category&quot;' />
        </members>
      </column>
      <column caption='SelectMeasures' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Discount&quot;' />
          <member value='&quot;Quantity&quot;' />
        </members>
      </column>
      <column caption='SelectDate' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-08-08#'>
        <calculation class='tableau' formula='#2016-08-08#' />
      </column>
      <column caption='SelectTop' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='6'>
        <calculation class='tableau' formula='6' />
        <range granularity='1' max='50' min='1' />
      </column>
      <column caption='Quantity (bin) Parameter' datatype='integer' name='[Quantity (bin) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='4'>
        <calculation class='tableau' formula='4' />
        <range granularity='1' max='7' min='0' />
      </column>
    </datasource>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.1nl69ws1sle55f158463o0jypzbj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1q8ffbf1gxpmj21f03brn10mfe15'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/bunya/Downloads/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1q8ffbf1gxpmj21f03brn10mfe15' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1q8ffbf1gxpmj21f03brn10mfe15' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_31F314D37788470BBC64DD961DD5EE06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Quantityparameter' datatype='real' name='[Calculation_1332784025463799808]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])*[Parameters].[Quantity (bin) Parameter]' />
      </column>
      <column caption='CalcDimensions' datatype='string' name='[Calculation_1332784025466527745]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &apos;Segment&apos; then [Segment]&#13;&#10;    WHEN &apos;Ship Mode&apos; then [Ship Mode]&#13;&#10;    WHEN &apos;Category&apos; then [Category]&#13;&#10;    WHEN &apos;Region&apos; then [Region]&#13;&#10;END' />
      </column>
      <column caption='CalcMeasures' datatype='real' name='[Calculation_1332784025472827394]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &apos;Sales&apos; then [Sales]&#13;&#10;    WHEN &apos;Profit&apos; then [Profit]&#13;&#10;    WHEN &apos;Quantity&apos; then [Quantity]&#13;&#10;    WHEN &apos;Discount&apos; then [Discount]&#13;&#10;END' />
      </column>
      <column caption='CalcDate' datatype='boolean' name='[Calculation_1332784025476505603]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3] &gt;= [Order Date]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Quantity (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Quantity]' peg='0' size='1.77' />
      </column>
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Sales (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[Sales]' peg='0' size='447' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_31F314D37788470BBC64DD961DD5EE06]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.770742' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.229258' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='SelectDimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
          <calculation class='tableau' formula='&quot;Region&quot;' />
        </column>
        <column caption='SelectMeasures' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
        <column caption='SelectDate' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-08-08#'>
          <calculation class='tableau' formula='#2016-08-08#' />
        </column>
        <column caption='Quantity (bin) Parameter' datatype='integer' name='[Quantity (bin) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='4'>
          <calculation class='tableau' formula='4' />
          <range granularity='1' max='7' min='0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_31F314D37788470BBC64DD961DD5EE06'>
            <properties context=''>
              <relation connection='excel-direct.1q8ffbf1gxpmj21f03brn10mfe15' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Dimens&amp;Measures'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1nl69ws1sle55f158463o0jypzbj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectDimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
              <calculation class='tableau' formula='&quot;Region&quot;' />
            </column>
            <column caption='SelectMeasures' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nl69ws1sle55f158463o0jypzbj'>
            <column caption='CalcDimensions' datatype='string' name='[Calculation_1332784025466527745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &apos;Segment&apos; then [Segment]&#13;&#10;    WHEN &apos;Ship Mode&apos; then [Ship Mode]&#13;&#10;    WHEN &apos;Category&apos; then [Category]&#13;&#10;    WHEN &apos;Region&apos; then [Region]&#13;&#10;END' />
            </column>
            <column caption='CalcMeasures' datatype='real' name='[Calculation_1332784025472827394]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &apos;Sales&apos; then [Sales]&#13;&#10;    WHEN &apos;Profit&apos; then [Profit]&#13;&#10;    WHEN &apos;Quantity&apos; then [Quantity]&#13;&#10;    WHEN &apos;Discount&apos; then [Discount]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1332784025466527745]' derivation='None' name='[none:Calculation_1332784025466527745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1332784025472827394]' derivation='Sum' name='[sum:Calculation_1332784025472827394:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nl69ws1sle55f158463o0jypzbj].[sum:Profit:qk]' num-steps='2' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nl69ws1sle55f158463o0jypzbj].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nl69ws1sle55f158463o0jypzbj].[none:Calculation_1332784025466527745:nk] * [federated.1nl69ws1sle55f158463o0jypzbj].[sum:Calculation_1332784025472827394:qk])</rows>
        <cols>[federated.1nl69ws1sle55f158463o0jypzbj].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{F1D736DF-0EC7-4E02-8FEB-060A3FB2467D}' />
    </worksheet>
    <worksheet name='SelectDate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1nl69ws1sle55f158463o0jypzbj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectDate' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-08-08#'>
              <calculation class='tableau' formula='#2016-08-08#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nl69ws1sle55f158463o0jypzbj'>
            <column caption='CalcDate' datatype='boolean' name='[Calculation_1332784025476505603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3] &gt;= [Order Date]' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1332784025476505603]' derivation='None' name='[none:Calculation_1332784025476505603:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nl69ws1sle55f158463o0jypzbj].[none:Calculation_1332784025476505603:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1332784025476505603:nk]' member='false' />
              <groupfilter function='member' level='[none:Calculation_1332784025476505603:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Calculation_1332784025476505603:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.1nl69ws1sle55f158463o0jypzbj].[none:Calculation_1332784025476505603:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nl69ws1sle55f158463o0jypzbj].[sum:Sales:qk]</rows>
        <cols>[federated.1nl69ws1sle55f158463o0jypzbj].[twk:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{58CC8CA4-B416-4236-B058-69C851468B91}' />
    </worksheet>
    <worksheet name='SelectDimensions'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1nl69ws1sle55f158463o0jypzbj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectDimension' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
              <calculation class='tableau' formula='&quot;Region&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nl69ws1sle55f158463o0jypzbj'>
            <column caption='CalcDimensions' datatype='string' name='[Calculation_1332784025466527745]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;    WHEN &apos;Segment&apos; then [Segment]&#13;&#10;    WHEN &apos;Ship Mode&apos; then [Ship Mode]&#13;&#10;    WHEN &apos;Category&apos; then [Category]&#13;&#10;    WHEN &apos;Region&apos; then [Region]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1332784025466527745]' derivation='None' name='[none:Calculation_1332784025466527745:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nl69ws1sle55f158463o0jypzbj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nl69ws1sle55f158463o0jypzbj].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nl69ws1sle55f158463o0jypzbj].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nl69ws1sle55f158463o0jypzbj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nl69ws1sle55f158463o0jypzbj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1nl69ws1sle55f158463o0jypzbj].[Multiple Values]</rows>
        <cols>([federated.1nl69ws1sle55f158463o0jypzbj].[none:Calculation_1332784025466527745:nk] / [federated.1nl69ws1sle55f158463o0jypzbj].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{58233BAE-D71C-46AB-A4BB-5F078FDD245E}' />
    </worksheet>
    <worksheet name='SelectFilter1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1nl69ws1sle55f158463o0jypzbj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectTop' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='50' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nl69ws1sle55f158463o0jypzbj'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nl69ws1sle55f158463o0jypzbj].[none:City:nk]'>
            <groupfilter count='[Parameters].[Parameter 4]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([City])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nl69ws1sle55f158463o0jypzbj].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nl69ws1sle55f158463o0jypzbj].[none:City:nk]</rows>
        <cols>[federated.1nl69ws1sle55f158463o0jypzbj].[sum:Quantity:qk]</cols>
      </table>
      <simple-id uuid='{86FE1B52-3B28-42BB-8A82-4FD27086039B}' />
    </worksheet>
    <worksheet name='SelectFilter2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1nl69ws1sle55f158463o0jypzbj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectTop' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range granularity='1' max='50' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nl69ws1sle55f158463o0jypzbj'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nl69ws1sle55f158463o0jypzbj].[none:City:nk]'>
            <groupfilter count='[Parameters].[Parameter 4]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([City])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nl69ws1sle55f158463o0jypzbj].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 4]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Quantity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nl69ws1sle55f158463o0jypzbj].[none:City:nk]</column>
            <column>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1nl69ws1sle55f158463o0jypzbj].[none:City:nk] / [federated.1nl69ws1sle55f158463o0jypzbj].[none:Customer Name:nk])</rows>
        <cols>[federated.1nl69ws1sle55f158463o0jypzbj].[sum:Quantity:qk]</cols>
      </table>
      <simple-id uuid='{A54819C5-885B-4425-8AD4-5E6C5A63C7F8}' />
    </worksheet>
    <worksheet name='SelectMeasures'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1nl69ws1sle55f158463o0jypzbj' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SelectMeasures' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nl69ws1sle55f158463o0jypzbj'>
            <column caption='CalcMeasures' datatype='real' name='[Calculation_1332784025472827394]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;    WHEN &apos;Sales&apos; then [Sales]&#13;&#10;    WHEN &apos;Profit&apos; then [Profit]&#13;&#10;    WHEN &apos;Quantity&apos; then [Quantity]&#13;&#10;    WHEN &apos;Discount&apos; then [Discount]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1332784025472827394]' derivation='Sum' name='[sum:Calculation_1332784025472827394:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Sub-Category:nk]</rows>
        <cols>[federated.1nl69ws1sle55f158463o0jypzbj].[sum:Calculation_1332784025472827394:qk]</cols>
      </table>
      <simple-id uuid='{62682127-099C-4847-8EE3-606F7F4818E3}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1nl69ws1sle55f158463o0jypzbj' />
          </datasources>
          <datasource-dependencies datasource='federated.1nl69ws1sle55f158463o0jypzbj'>
            <column datatype='integer' name='[Sales (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='2' formula='[Sales]' peg='0' size='447' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Count' name='[cnt:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales (bin)]' derivation='None' name='[none:Sales (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Sales (bin):qk]</rows>
        <cols>[federated.1nl69ws1sle55f158463o0jypzbj].[cnt:Sales:qk]</cols>
        <show-full-range>
          <column>[federated.1nl69ws1sle55f158463o0jypzbj].[Sales (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{A30317C7-9572-49BE-AA70-D6E060CC5BD1}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Quantity (bin) Parameter]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[:Measure Names]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Quantity (bin):qk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Sales (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CEBCEE3-178A-4498-9445-CB93A23466FE}' />
    </window>
    <window class='worksheet' name='SelectDimensions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nl69ws1sle55f158463o0jypzbj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[:Measure Names]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Calculation_1332784025466527745:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Category:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Region:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CD8603D-5D59-4E35-B729-6094EE504659}' />
    </window>
    <window class='worksheet' name='SelectMeasures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Category:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Country:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Region:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C207A936-8CC2-4B11-BAF5-E751F62B8331}' />
    </window>
    <window class='worksheet' name='Dimens&amp;Measures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1nl69ws1sle55f158463o0jypzbj].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Calculation_1332784025466527745:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Category:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Country:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Product Name:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Region:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Sub-Category:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FECC8A4-E90B-451B-8687-C86B4E682045}' />
    </window>
    <window class='worksheet' name='SelectDate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='datetime' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nl69ws1sle55f158463o0jypzbj].[none:Calculation_1332784025476505603:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Calculation_1332784025476505603:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Sub-Category:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[yr:Order Date:ok]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FA83E71-2EFE-48BE-9D97-FD3A908D0B0C}' />
    </window>
    <window class='worksheet' name='SelectFilter1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{189C8BE8-09FC-494E-AA5E-D9C12CE48EFE}' />
    </window>
    <window class='worksheet' maximized='true' name='SelectFilter2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:City:nk]</field>
            <field>[federated.1nl69ws1sle55f158463o0jypzbj].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E15E6EE-C069-4D10-AE96-6B3CBEBC0601}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dimens&amp;Measures' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SelectDate' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='SelectDimensions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SelectFilter1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SelectFilter2' width='192'>
      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
      dxpbADbvNP8/esJ+Br5wYE4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SelectMeasures' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
